{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Оголошуємо об'єкт formData поза функціями\nconst formData = { email: \"\", message: \"\" };\n// Обираємо форму та її елементи\nconst form = document.querySelector('.feedback-form');\nconst STORAGE_KEY = \"feedback-form-state\";\n\n// Завантажуємо дані з локального сховища, якщо вони існують\ndocument.addEventListener('DOMContentLoaded', () =>\n{\n    if (localStorage.getItem(\"feedback-form-state\"))\n        {\n            // Отримуємо дані з localStorage\n            const storedData = JSON.parse(localStorage.getItem(\"feedback-form-state\"));\n            // Заповнюємо форму та об'єкт з сховища даних даних\n            for (const key in storedData)\n            {\n                const input = form.querySelector(`[name=\"${key}\"]`);\n                if (input)\n                    {\n                        input.value = storedData[key]; // Встановлюємо значення для кожного поля\n                        formData[key] = storedData[key]; // Оновлюємо об'єкт formData\n                    }\n            }\n        }\n    else {\n        // Якщо відсутні дані, залишаємо поля порожніми\n        console.log(\"Дані в локальному сховищі відсутні.\");\n        }\n});\n\n// Оновлюємо об'єкт formData та локальне сховище в ході зміни даних у формі\nform.addEventListener(\"input\", function (event) {\n    const target = event.target;\n    if (target.name) {\n        formData[target.name] = target.value.trim();\n        // Сохраняем изменения в localStorage\n        localStorage.setItem(\"feedback-form-state\", JSON.stringify(formData));\n    }    \n});\n\n // Обробка події submit\nform.addEventListener('submit', (event) => {\n    event.preventDefault(); // Запобігаємо перезавантаженню сторінки\n    // Перевіряємо, чи всі поля заповнені\n    if (!formData.email || !formData.message) {\n        console.log(\"Fill please all fields\");\n        return;\n    }\n    // Виводимо об'єкт formData у консоль\n    console.log(\"Submitted Data:\", formData);\n    // Очищаємо локальне сховище, об'єкт formData і форму\n    localStorage.removeItem(STORAGE_KEY);\n    formData.email = \"\";\n    formData.message = \"\";\n    form.reset();\n});\n"],"names":["formData","form","STORAGE_KEY","storedData","key","input","event","target"],"mappings":"oDACA,MAAMA,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EAEnCC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAc,sBAGpB,SAAS,iBAAiB,mBAAoB,IAC9C,CACI,GAAI,aAAa,QAAQ,qBAAqB,EAC1C,CAEI,MAAMC,EAAa,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAEzE,UAAWC,KAAOD,EAClB,CACI,MAAME,EAAQJ,EAAK,cAAc,UAAUG,CAAG,IAAI,EAC9CC,IAEIA,EAAM,MAAQF,EAAWC,CAAG,EAC5BJ,EAASI,CAAG,EAAID,EAAWC,CAAG,EAEzC,CACJ,MAGD,QAAQ,IAAI,qCAAqC,CAEzD,CAAC,EAGDH,EAAK,iBAAiB,QAAS,SAAUK,EAAO,CAC5C,MAAMC,EAASD,EAAM,OACjBC,EAAO,OACPP,EAASO,EAAO,IAAI,EAAIA,EAAO,MAAM,OAErC,aAAa,QAAQ,sBAAuB,KAAK,UAAUP,CAAQ,CAAC,EAE5E,CAAC,EAGDC,EAAK,iBAAiB,SAAWK,GAAU,CAGvC,GAFAA,EAAM,eAAc,EAEhB,CAACN,EAAS,OAAS,CAACA,EAAS,QAAS,CACtC,QAAQ,IAAI,wBAAwB,EACpC,MACH,CAED,QAAQ,IAAI,kBAAmBA,CAAQ,EAEvC,aAAa,WAAWE,CAAW,EACnCF,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnBC,EAAK,MAAK,CACd,CAAC"}